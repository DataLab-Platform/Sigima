{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "üßΩ Run Ruff Formatter",
            "command": "${command:python.interpreterPath}",
            "args": [
                "-m",
                "ruff",
                "format"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "clear": true,
                "echo": true,
                "focus": false,
                "panel": "dedicated",
                "reveal": "always",
                "showReuseMessage": true
            },
            "type": "shell"
        },
        {
            "label": "üî¶ Run Ruff Linter",
            "command": "${command:python.interpreterPath}",
            "args": [
                "-m",
                "ruff",
                "check",
                "--fix",
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "clear": true,
                "echo": true,
                "focus": false,
                "panel": "dedicated",
                "reveal": "always",
                "showReuseMessage": true,
            },
            "type": "shell"
        },
        {
            "label": "üî¶ Run Pylint",
            "command": "${command:python.interpreterPath}",
            "args": [
                "-m",
                "pylint",
                "sigima",
                "--disable=duplicate-code",
                "--disable=fixme",
                "--disable=too-many-arguments",
                "--disable=too-many-branches",
                "--disable=too-many-instance-attributes",
                "--disable=too-many-lines",
                "--disable=too-many-locals",
                "--disable=too-many-public-methods",
                "--disable=too-many-statements"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "clear": true,
                "echo": true,
                "focus": false,
                "panel": "dedicated",
                "reveal": "always",
                "showReuseMessage": true
            },
            "type": "shell"
        },
        {
            "label": "sphinx-build",
            "command": "${command:python.interpreterPath}",
            "args": [
                "-m",
                "sphinx",
                "build",
                ".",
                "../build/gettext",
                "-b",
                "gettext",
                "-W"
            ],
            "options": {
                "cwd": "${workspaceFolder}/doc",
                "statusbar": {
                    "hide": true
                }
            },
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "clear": true,
                "echo": true,
                "focus": false,
                "panel": "dedicated",
                "reveal": "always",
                "showReuseMessage": true,
            },
            "type": "shell"
        },
        {
            "label": "sphinx-intl update",
            "command": "${command:python.interpreterPath}",
            "args": [
                "-m",
                "sphinx_intl",
                "update",
                "-p",
                "../build/gettext",
                "-l",
                "fr",
                "--no-obsolete",
                "-w",
                "0",
            ],
            "options": {
                "cwd": "${workspaceFolder}/doc",
                "statusbar": {
                    "hide": true
                }
            },
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "clear": true,
                "echo": true,
                "focus": false,
                "panel": "dedicated",
                "reveal": "always",
                "showReuseMessage": true,
            },
            "type": "shell",
            "dependsOrder": "sequence",
            "dependsOn": [
                "sphinx-build"
            ]
        },
        {
            "label": "sphinx-intl build",
            "command": "${command:python.interpreterPath}",
            "args": [
                "-m",
                "sphinx_intl",
                "build",
            ],
            "options": {
                "cwd": "${workspaceFolder}/doc",
                "statusbar": {
                    "hide": true
                }
            },
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "clear": true,
                "echo": true,
                "focus": false,
                "panel": "dedicated",
                "reveal": "always",
                "showReuseMessage": true
            },
            "type": "shell"
        },
        {
            "label": "üîé Scan translations",
            "command": "${command:python.interpreterPath}",
            "args": [
                "-m",
                "guidata.utils.translations",
                "scan",
                "--name",
                "sigima",
                "--directory",
                ".",
                "--copyright-holder",
                "DataLab Platform Developers"
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "clear": false,
                "echo": true,
                "focus": false,
                "panel": "shared",
                "reveal": "always",
                "showReuseMessage": true
            },
            "type": "shell",
            "dependsOrder": "sequence",
            "dependsOn": [
                "sphinx-build",
                "sphinx-intl update"
            ]
        },
        {
            "label": "üìö Compile translations",
            "command": "${command:python.interpreterPath}",
            "args": [
                "-m",
                "guidata.utils.translations",
                "compile",
                "--name",
                "sigima",
                "--directory",
                "."
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "presentation": {
                "clear": false,
                "echo": true,
                "focus": false,
                "panel": "shared",
                "reveal": "always",
                "showReuseMessage": true
            },
            "type": "shell",
            "dependsOrder": "sequence",
            "dependsOn": [
                "sphinx-intl build",
            ]
        },
        {
            "label": "üöÄ Run pytest",
            "command": "${command:python.interpreterPath}",
            "args": [
                "-m",
                "pytest",
                "--ff",
            ],
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    // "DEBUG": "1", // ‚ò£Ô∏è Debug mode will reset .ini settings
                    "UNATTENDED": "1"
                }
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": true
            },
            "type": "shell",
        },
        {
            "label": "Generate requirements",
            "command": "${command:python.interpreterPath}",
            "args": [
                "-m",
                "guidata.utils.genreqs",
                "all",
            ],
            "options": {
                "cwd": "${workspaceFolder}",
                "statusbar": {
                    "hide": true
                }
            },
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "clear": true,
                "echo": true,
                "focus": false,
                "panel": "dedicated",
                "reveal": "always",
                "showReuseMessage": true,
            },
            "type": "shell"
        },
        {
            "label": "üß™ Run coverage tests",
            "type": "shell",
            "command": "${command:python.interpreterPath}",
            "args": [
                "-m",
                "coverage",
                "run",
                "-m",
                "pytest",
                "sigima"
            ],
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    "COVERAGE_PROCESS_START": "${workspaceFolder}/.coveragerc",
                },
                "statusbar": {
                    "hide": true
                }
            },
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "panel": "dedicated"
            },
            "problemMatcher": []
        },
        {
            "label": "üìä Coverage full",
            "type": "shell",
            "windows": {
                "command": "${command:python.interpreterPath} -m coverage combine && ${command:python.interpreterPath} -m coverage html && start htmlcov\\index.html"
            },
            "linux": {
                "command": "${command:python.interpreterPath} -m coverage combine && ${command:python.interpreterPath} -m coverage html && xdg-open htmlcov/index.html"
            },
            "osx": {
                "command": "${command:python.interpreterPath} -m coverage combine && ${command:python.interpreterPath} -m coverage html && open htmlcov/index.html"
            },
            "options": {
                "cwd": "${workspaceFolder}",
                "env": {
                    "COVERAGE_PROCESS_START": "${workspaceFolder}/.coveragerc"
                }
            },
            "presentation": {
                "panel": "dedicated"
            },
            "problemMatcher": [],
            "dependsOrder": "sequence",
            "dependsOn": [
                "üß™ Run coverage tests",
            ],
        },
        {
            "label": "Update doc resources (statically generated)",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/c",
                "update_doc_resources.bat"
            ],
            "options": {
                "cwd": "scripts",
                "env": {
                    "PYTHON": "${command:python.interpreterPath}",
                    "UNATTENDED": "1"
                },
                "statusbar": {
                    "hide": true
                }
            },
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": true
            },
            "dependsOrder": "sequence",
            "dependsOn": [
                "Generate requirements",
            ]
        },
        {
            "label": "üì¶ Upgrade PlotPyStack",
            "command": "${command:python.interpreterPath}",
            "args": [
                "-m",
                "pip",
                "install",
                "--upgrade",
                "pip",
                "PythonQwt",
                "guidata",
                "PlotPy",
            ],
            "options": {
                "cwd": "${workspaceFolder}",
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "type": "shell"
        },
        {
            "label": "üîÅ Reinstall guidata/plotpy dev",
            "type": "shell",
            "windows": {
                "command": "pip uninstall -y guidata plotpy; Remove-Item -Recurse -Force .venv/Lib/site-packages/guidata -ErrorAction SilentlyContinue; Remove-Item -Recurse -Force .venv/Lib/site-packages/plotpy -ErrorAction SilentlyContinue; pip install -e ../guidata; pip install -e ../plotpy",
            },
            "linux": {
                "command": "pip uninstall -y guidata plotpy && rm -rf .venv/lib/python*/site-packages/guidata && rm -rf .venv/lib/python*/site-packages/plotpy && pip install -e ../guidata && pip install -e ../plotpy"
            },
            "osx": {
                "command": "pip uninstall -y guidata plotpy && rm -rf .venv/lib/python*/site-packages/guidata && rm -rf .venv/lib/python*/site-packages/plotpy && pip install -e ../guidata && pip install -e ../plotpy"
            },
            "options": {
                "cwd": "${workspaceFolder}",
                "statusbar": {
                    "hide": true
                }
            },
            "presentation": {
                "panel": "dedicated",
                "reveal": "always"
            },
            "problemMatcher": []
        },
        {
            "label": "üßπ Clean Up",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/c",
                "clean_up.bat"
            ],
            "options": {
                "cwd": "scripts"
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            }
        },
        {
            "label": "üìö Build documentation",
            "command": "${command:python.interpreterPath}",
            "args": [
                "-m",
                "sphinx",
                "build",
                ".",
                "../build/doc",
                "-b",
                "html",
                "-W"
            ],
            "options": {
                "cwd": "${workspaceFolder}/doc",
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "clear": true,
                "echo": true,
                "focus": false,
                "panel": "dedicated",
                "reveal": "always",
                "showReuseMessage": true,
            },
            "type": "shell",
            "dependsOrder": "sequence",
            "dependsOn": [
                "Generate requirements"
            ]
        },
        {
            "label": "üåê Open HTML doc",
            "type": "shell",
            "windows": {
                "command": "start ../build/doc/index.html"
            },
            "linux": {
                "command": "xdg-open ../build/doc/index.html"
            },
            "osx": {
                "command": "open ../build/doc/index.html"
            },
            "options": {
                "cwd": "${workspaceFolder}/doc"
            },
            "problemMatcher": []
        },
        {
            "label": "üì¶ Build package",
            "type": "shell",
            "command": "${command:python.interpreterPath}",
            "args": [
                "-m",
                "guidata.utils.securebuild",
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "presentation": {
                "clear": true,
                "panel": "dedicated"
            },
            "problemMatcher": [],
            "dependsOrder": "sequence",
            "dependsOn": [
                "üßπ Clean Up",
                "Generate requirements"
            ]
        },
        {
            "label": "‚ùî List untracked files",
            "type": "shell",
            "command": "git ls-files --others | Where-Object { $_ -notmatch '^\\.' -and $_ -notmatch '^(build|dist|releases)/' -and $_ -notmatch '.(pyc|mo)$'}",
            "options": {
                "cwd": "${workspaceFolder}",
            },
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "dedicated",
                "showReuseMessage": true,
                "clear": true
            }
        },
    ]
}